#
# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: gravitee-backend-policies.gravitee.io
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: gravitee.io
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1alpha1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              description: "Client configuration to access the target service.
              The target service is identified by adding the label 'gravitee.io/backend-policy' to the service definition."
              properties:
                protocol:
                  type: string
                  enum: ["http", "grpc"]
                httpClient:
                  type: object
                  description: "
                  HttpClient configuration to apply for the backend service client:
                    * connectTimeout: 5000
                    * idleTimeout: 60000
                    * keepAlive: true
                    * readTimeout: 10000
                    * pipelining: false
                    * maxConcurrentConnections: 100
                    * useCompression: true
                    * followRedirects: false
                  "
                  x-kubernetes-preserve-unknown-fields: true
                httpSslOptions:
                  type: object
                  description: "
                   HttpClient SSL options to apply for the backend service client:
                   * trustAll: false
                   * hostnameVerifier: false
                   * trustStore:
                       type: PEM
                       content: <secret name>
                   * keyStore:
                       type: PEM
                       certContent: <secret name>
                       keyContent: <secret name>
                  "
                  x-kubernetes-preserve-unknown-fields: true
                httpProxy: # useful indie k8s ??? should we manage external services (if yes through k8s service definition (endpoint or ExternalService) - or with custom config)
                  type: object
                  description: HttpProxy options
                  x-kubernetes-preserve-unknown-fields: true
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: gravitee-backend-policies
    # singular name to be used as an alias on the CLI and for display
    singular: gravitee-backend-policy
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: GraviteeBackendPolicy
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - giobp